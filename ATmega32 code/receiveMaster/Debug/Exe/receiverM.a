;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <delay.h>
;#include <string.h>
;#include <stdlib.h>
;
;#define bt_vcc PORTB.5
;#define bt_en PORTB.6
;#define bt_state PORTB.7
;// Declare your global variables here
;
;unsigned char at_rmaad[8], at_bind_A[26], at_bind_B[26], at_init[11], at_inq[10], at_link_A[26], at_link_B[26], dicson[7 ...
;unsigned char recData[5];        //To declare 8bit character variable
;char i=0, b=0;    //To declare single bit
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;
;void usart_transmit(unsigned char ch )
; 0000 0017 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0018     while ( !( UCSRA & (1<<UDRE)) );
;PCODE: $0000000F VOL: 0
;	ch -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0019     UDR = ch;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;interrupt [USART_RXC] void myInterrupt(void)
; 0000 001D {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001E     recData[i] = getchar();     //Get Character from UDR
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001F 
; 0000 0020     if(recData[i]=='M')
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0021     {
; 0000 0022         recData[i]=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0023         b=1;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0024     }
; 0000 0025 
; 0000 0026     i++;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0027     if(i>=5)
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0028     {
; 0000 0029         i=0;
;PCODE: $00000036 VOL: 0
; 0000 002A     }
; 0000 002B }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;
;
;void pair_with_bluetooth_A(void)
; 0000 002F {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0030     int j=0;
; 0000 0031     //UCSRB=(0<<RXCIE)|(0<<RXEN);
; 0000 0032 
; 0000 0033     PORTB.6=0;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;	j -> R16,R17
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0034     PORTB.5=0;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0035     delay_ms(200);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0036 
; 0000 0037     PORTB.6=1;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0038     delay_ms(100);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0039     PORTB.5=1;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003A 
; 0000 003B     for (j=0; j<strlen(at_rmaad); j++)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 003C     {
; 0000 003D         usart_transmit(at_rmaad[j]);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 003E     }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003F     delay_ms(1000);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0040 
; 0000 0041     for (j=0; j<strlen(at_bind_A); j++)
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0042     {
; 0000 0043         usart_transmit(at_bind_A[j]);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0044     }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0045     delay_ms(1000);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0046 
; 0000 0047     PORTB.6=0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0048     PORTB.5=0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0049 
; 0000 004A     delay_ms(200);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 004B     PORTB.5=1;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 004C }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;
;void pair_with_bluetooth_B(void)
; 0000 004F {
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0050     int j=0;
; 0000 0051 
; 0000 0052     PORTB.6=0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;	j -> R16,R17
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0053     PORTB.5=0;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0054     delay_ms(200);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0055 
; 0000 0056     PORTB.6=1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0057     delay_ms(100);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0058     PORTB.5=1;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0059 
; 0000 005A 
; 0000 005B     for (j=0; j<strlen(at_rmaad); j++)
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 005C     {
; 0000 005D         usart_transmit(at_rmaad[j]);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 005E     }
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 005F     delay_ms(1000);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0060 
; 0000 0061 
; 0000 0062     for (j=0; j<strlen(at_bind_B); j++)
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0063     {
; 0000 0064         usart_transmit(at_bind_B[j]);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0065     }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0066     delay_ms(1000);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0067 
; 0000 0068     PORTB.6=0;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0069     PORTB.5=0;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 006A 
; 0000 006B     delay_ms(200);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 006C     PORTB.5=1;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 006D }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;
;void main(void)
; 0000 0070 {
;PCODE: $000000CF VOL: 0
; 0000 0071 // Declare your local variables here
; 0000 0072 char disp1[16], disp2[16];
; 0000 0073 unsigned char loadA[5], loadB[5];
; 0000 0074 float A=0, B=0, Tot=0;
; 0000 0075 float x=0, y=0, z=0;
; 0000 0076 int clk=0;
; 0000 0077 char coordX[5], coordY[5], coordZ[5], totalLoad[5];
; 0000 0078 // Input/Output Ports initialization
; 0000 0079 DDRA=0xFF;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;	disp1 -> Y+70
;	disp2 -> Y+54
;	loadA -> Y+49
;	loadB -> Y+44
;	A -> Y+40
;	B -> Y+36
;	Tot -> Y+32
;	x -> Y+28
;	y -> Y+24
;	z -> Y+20
;	clk -> R16,R17
;	coordX -> Y+15
;	coordY -> Y+10
;	coordZ -> Y+5
;	totalLoad -> Y+0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007A 
; 0000 007B // Port B initialization
; 0000 007C // Function: Bit7=In Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 007D DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 007E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 007F PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0080 
; 0000 0081 
; 0000 0082 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0083 MCUCSR=0xFF;  //(0<<ISC2);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0084 
; 0000 0085 // USART initialization
; 0000 0086 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0087 // USART Receiver: On
; 0000 0088 // USART Transmitter: Off
; 0000 0089 // USART Mode: Asynchronous
; 0000 008A // USART Baud Rate: 9600
; 0000 008B UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 008C UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 008D UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 008E UBRRH=0x00;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 008F UBRRL=0x19;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0090 
; 0000 0091 
; 0000 0092 
; 0000 0093 #asm ("sei");
;PCODE: $000000EB VOL: 0
	sei
;PCODE: $000000EC VOL: 0
; 0000 0094 // Alphanumeric LCD initialization
; 0000 0095 // Connections are specified in the
; 0000 0096 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0097 // RS - PORTA Bit 0
; 0000 0098 // RD - PORTA Bit 1
; 0000 0099 // EN - PORTA Bit 2
; 0000 009A // D4 - PORTA Bit 4
; 0000 009B // D5 - PORTA Bit 5
; 0000 009C // D6 - PORTA Bit 6
; 0000 009D // D7 - PORTA Bit 7
; 0000 009E // Characters/line: 16
; 0000 009F lcd_init(16);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00A0 strcpy(at_rmaad, "AT+RMAAD\r\n");
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00A1 
; 0000 00A2 strcpy(at_bind_A, "AT+BIND=98D3,A1,F5B548\r\n");
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00A3 strcpy(at_bind_B, "AT+BIND=98D3,21,F73B81\r\n");
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00A4 
; 0000 00A5 strcpy(at_init, "AT+INIT\r\n");
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00A6 strcpy(at_inq, "AT+INQ\r\n");
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00A7 
; 0000 00A8 strcpy(at_link_A, "AT+LINK=98D3,A1,F5B548\r\n");
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00A9 strcpy(at_link_B, "AT+LINK=98D3,21,F73B81\r\n");
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00AA 
; 0000 00AB strcpy(dicson, "AT+DISC\r\n");
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00AC 
; 0000 00AD PORTB.5=1;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00AE 
; 0000 00AF while (1)
;PCODE: $00000119 VOL: 0
; 0000 00B0       {
; 0000 00B1       // Place your code here
; 0000 00B2 
; 0000 00B3             //Receiving from Bluetooth transmitter A
; 0000 00B4             //coordinate of the loadcell: x=10m, y=5m, z=4m
; 0000 00B5 
; 0000 00B6             pair_with_bluetooth_A();
;PCODE: $0000011A VOL: 0
; 0000 00B7 
; 0000 00B8             while(PINB.7==0)
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00B9             {
; 0000 00BA //                lcd_clear();
; 0000 00BB //                lcd_gotoxy(0,0);
; 0000 00BC //                lcd_puts("No B.tooth Con. A");
; 0000 00BD //                delay_ms(3);
; 0000 00BE             }
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00BF             delay_ms(2000);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00C0 
; 0000 00C1             usart_transmit('U');
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00C2             while(b==0 && clk<50)
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00C3             {
; 0000 00C4                 //recData[0]='\0';
; 0000 00C5                 i=0;
;PCODE: $0000012F VOL: 0
; 0000 00C6                 usart_transmit('U');
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00C7                 delay_ms(100);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00C8                 clk++;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00C9             }
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00CA             strcpy(loadA, recData);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00CB             clk=0;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00CC             //if (b==1)
; 0000 00CD             //{
; 0000 00CE                 //recData[0]='\0';
; 0000 00CF                 b=0;
;PCODE: $0000013F VOL: 0
; 0000 00D0                 i=0;
;PCODE: $00000140 VOL: 0
; 0000 00D1                 //delay_ms(300);
; 0000 00D2 
; 0000 00D3             //}
; 0000 00D4 //            delay_ms(500);
; 0000 00D5 //            usart_transmit('U');
; 0000 00D6 //            while(b==0);
; 0000 00D7 //            if (b==1)
; 0000 00D8 //            {
; 0000 00D9 //                strcpy(loadA, recData);
; 0000 00DA //                b=0;
; 0000 00DB //                i=0;
; 0000 00DC //            }
; 0000 00DD 
; 0000 00DE             //Receiving from Bluetooth transmitter B
; 0000 00DF             //coordinate of the loadcell: x=-8m, y=3m, z=-1m
; 0000 00E0 
; 0000 00E1             pair_with_bluetooth_B();
;PCODE: $00000141 VOL: 0
; 0000 00E2 
; 0000 00E3             while(PINB.7==0)
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00E4             {
; 0000 00E5 //                lcd_clear();
; 0000 00E6 //                lcd_gotoxy(0,0);
; 0000 00E7 //                lcd_puts("No B.tooth Con. B");
; 0000 00E8 //                delay_ms(3);
; 0000 00E9             }
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00EA             delay_ms(2000);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00EB 
; 0000 00EC             usart_transmit('V');
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00ED             while(b==0 && clk<50)
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00EE             {
; 0000 00EF                 //recData[0]='\0';
; 0000 00F0                 i=0;
;PCODE: $00000156 VOL: 0
; 0000 00F1                 usart_transmit('V');
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00F2                 delay_ms(100);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00F3                 clk++;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00F4             }
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00F5             strcpy(loadB, recData);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00F6             //
; 0000 00F7             clk=0;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00F8             //if (b==1)
; 0000 00F9             //{
; 0000 00FA                 //recData[0]='\0';
; 0000 00FB                 b=0;
;PCODE: $00000166 VOL: 0
; 0000 00FC                 i=0;
;PCODE: $00000167 VOL: 0
; 0000 00FD             //    delay_ms(300);
; 0000 00FE             //}
; 0000 00FF //            delay_ms(500);
; 0000 0100 //            usart_transmit('V');
; 0000 0101 //            while(b==0);
; 0000 0102 //            if (b==1)
; 0000 0103 //            {
; 0000 0104 //                strcpy(loadB, recData);
; 0000 0105 //                b=0;
; 0000 0106 //                i=0;
; 0000 0107 //            }
; 0000 0108 
; 0000 0109             A=atof(loadA);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 010A             B=atof(loadB);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 010B 
; 0000 010C             if(A<100)
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 010D             {
; 0000 010E                 A=0;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 010F             }
; 0000 0110             if(B<100)
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0111             {
; 0000 0112                 B=0;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 0113             }
; 0000 0114 
; 0000 0115             A/=1000;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0116             B/=1000;
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 0117 
; 0000 0118 //            x=(10*(long)A-8*(long)B)/((long)A+(long)B);
; 0000 0119 //            y=(5*(long)A+3*(long)B)/((long)A+(long)B);
; 0000 011A //            z=(2*(long)A-(long)B)/((long)A+(long)B);
; 0000 011B 
; 0000 011C             x=(10*A-8*B)/(A+B);
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 011D             y=(5*A+3*B)/(A+B);
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 011E             z=(4*A-B)/(A+B);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 011F             if(A==0 && B==0)
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 0120             {
; 0000 0121                 x=0;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0122                 y=0;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0123                 z=0;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0124             }
; 0000 0125 
; 0000 0126 
; 0000 0127             Tot=A+B;
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0128             if(Tot>5.0)
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 0129             {
; 0000 012A                 strcpy(disp1, "OverLD,Kg ");
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 012B                 ftoa(Tot,2, totalLoad);
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 012C                 strcat(disp1, totalLoad);
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 012D             }
; 0000 012E             else
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 012F             {
; 0000 0130                 strcpy(disp1, "SafeLD,Kg ");
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0131                 ftoa(Tot,2, totalLoad);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 0132                 strcat(disp1, totalLoad);
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0133             }
;PCODE: $000001EA VOL: 0
; 0000 0134             //Metacenter z-coordinate 3m
; 0000 0135 
; 0000 0136 //            strcpy(disp1, "x=");
; 0000 0137 //            ftoa(x,2, coordX);
; 0000 0138 //            strcat(disp1, coordX);
; 0000 0139 //
; 0000 013A //            strcat(disp1, "  y=");
; 0000 013B //            ftoa(y,2, coordY);
; 0000 013C //            strcat(disp1, coordY);
; 0000 013D 
; 0000 013E             if(z>3.0)
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 013F             {
; 0000 0140                 strcpy(disp2, "Instable,z=");
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0141                 ftoa(z,3, coordZ);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0142                 strcat(disp2, coordZ);
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0143             }
; 0000 0144             else if(z==3.0)
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0145             {
; 0000 0146                 strcpy(disp2, "Neutral,z=");
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 0147                 ftoa(z,3, coordZ);
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0148                 strcat(disp2, coordZ);
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0149             }
; 0000 014A             else
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 014B             {
; 0000 014C                 strcpy(disp2, "Stable,z=");
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 014D                 ftoa(z,3, coordZ);
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 014E                 strcat(disp2, coordZ);
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 014F             }
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 0150 
; 0000 0151             lcd_clear();
;PCODE: $00000225 VOL: 0
; 0000 0152             lcd_gotoxy(0, 0);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 0153             lcd_puts(disp1);
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 0154             lcd_gotoxy(0, 1);
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 0155             lcd_puts(disp2);
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0156             //delay_ms(3000);
; 0000 0157       }
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 0158 }
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0

	.DSEG
_0x31:
	.BYTE 0xC3
