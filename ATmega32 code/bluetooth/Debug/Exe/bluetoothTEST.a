;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <delay.h>
;#include <string.h>
;#include <stdlib.h>
;
;#define bt_vcc PORTB.5
;#define bt_en PORTB.6
;#define bt_state PORTB.7
;// Declare your global variables here
;
;unsigned char at[6], at_rmaad[12], at_bind_A[26], at_bind_B[26], at_init[11], at_inq[10], at_link_A[26], at_link_B[26],  ...
;unsigned char at_state[12], recData[16];        //To declare 8bit character variable
;char i=0, b=0;    //To declare single bit
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;
;void usart_transmit(unsigned char ch )
; 0000 0017 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0018     while ( !( UCSRA & (1<<UDRE)) );
;PCODE: $0000000F VOL: 0
;	ch -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0019     UDR = ch;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;interrupt [USART_RXC] void myInterrupt(void)
; 0000 001D {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001E     recData[i] = getchar();     //Get Character from UDR
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001F 
; 0000 0020     i++;
;PCODE: $00000024 VOL: 0
; 0000 0021     if(i>=16)
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0022     {
; 0000 0023         //lcd_clear();
; 0000 0024         //lcd_gotoxy(0,0);
; 0000 0025         //lcd_puts(recData);
; 0000 0026         //lcd_gotoxy(0,1);
; 0000 0027         //lcd_puts("Sth Received");
; 0000 0028         //delay_ms(500);
; 0000 0029         b=1;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002A         i=0;
;PCODE: $0000002A VOL: 0
; 0000 002B     }
; 0000 002C }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;
;void pair_with_bluetooth_A(void)
; 0000 0030 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0031     int j=0;
; 0000 0032     //UCSRB=(0<<RXCIE)|(0<<RXEN);
; 0000 0033     UBRRL=0x19;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;	j -> R16,R17
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0034     PORTB.6=0;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0035     PORTB.5=0;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0036     delay_ms(200);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0037 
; 0000 0038 
; 0000 0039     PORTB.6=1;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 003A     delay_ms(100);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003B     PORTB.5=1;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003C 
; 0000 003D     for (j=0; j<strlen(at); j++)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003E     {
; 0000 003F         usart_transmit(at[j]);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0040     }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0041     delay_ms(500);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0042 
; 0000 0043     for (j=0; j<strlen(at_rmaad); j++)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0044     {
; 0000 0045         usart_transmit(at_rmaad[j]);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0046     }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0047     delay_ms(500);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0048 
; 0000 0049     for (j=0; j<strlen(at_bind_A); j++)
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 004A     {
; 0000 004B         usart_transmit(at_bind_A[j]);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 004C     }
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 004D     delay_ms(500);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 004E 
; 0000 004F     for (j=0; j<strlen(at_init); j++)
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0050     {
; 0000 0051         usart_transmit(at_init[j]);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0052     }
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0053     delay_ms(500);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0054 
; 0000 0055     for (j=0; j<strlen(at_inq); j++)
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0056     {
; 0000 0057         usart_transmit(at_inq[j]);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0058     }
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0059     delay_ms(500);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 005A 
; 0000 005B     for (j=0; j<strlen(at_link_A); j++)
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 005C     {
; 0000 005D         usart_transmit(at_link_A[j]);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 005E     }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 005F     delay_ms(500);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0060 
; 0000 0061     PORTB.6=0;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0062     PORTB.5=0;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0063 
; 0000 0064     delay_ms(200);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0065     PORTB.5=1;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0066     //UCSRB=(1<<RXCIE)|(1<<RXEN);
; 0000 0067     //#asm ("sei");
; 0000 0068     UBRRL=0x67;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0069 }
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;
;void main(void)
; 0000 006C {
;PCODE: $000000D1 VOL: 0
; 0000 006D // Declare your local variables here
; 0000 006E int clk=0, k=0;
; 0000 006F // Input/Output Ports initialization
; 0000 0070 DDRA=0xFF;
;	clk -> R16,R17
;	k -> R18,R19
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0071 
; 0000 0072 // Port B initialization
; 0000 0073 // Function: Bit7=In Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0074 DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0075 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0076 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0077 
; 0000 0078 
; 0000 0079 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 007A MCUCSR=0xFF;  //(0<<ISC2);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 007B 
; 0000 007C // USART initialization
; 0000 007D // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 007E // USART Receiver: On
; 0000 007F // USART Transmitter: Off
; 0000 0080 // USART Mode: Asynchronous
; 0000 0081 // USART Baud Rate: 9600
; 0000 0082 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0083 UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0084 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0085 UBRRH=0x00;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0086 UBRRL=0x19;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0087 
; 0000 0088 
; 0000 0089 
; 0000 008A #asm ("sei");
;PCODE: $000000EA VOL: 0
	sei
;PCODE: $000000EB VOL: 0
; 0000 008B // Alphanumeric LCD initialization
; 0000 008C // Connections are specified in the
; 0000 008D // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 008E // RS - PORTA Bit 0
; 0000 008F // RD - PORTA Bit 1
; 0000 0090 // EN - PORTA Bit 2
; 0000 0091 // D4 - PORTA Bit 4
; 0000 0092 // D5 - PORTA Bit 5
; 0000 0093 // D6 - PORTA Bit 6
; 0000 0094 // D7 - PORTA Bit 7
; 0000 0095 // Characters/line: 16
; 0000 0096 lcd_init(16);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0097 strcpy(at, "AT\r\n");
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0098 strcpy(at_rmaad, "AT+RMAAD\r\n");
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0099 
; 0000 009A strcpy(at_bind_A, "AT+BIND=98D3,A1,F5B548\r\n");
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 009B strcpy(at_bind_B, "AT+BIND=98D3,21,F73B81\r\n");
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 009C 
; 0000 009D strcpy(at_init, "AT+INIT\r\n");
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 009E strcpy(at_inq, "AT+INQ\r\n");
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 009F 
; 0000 00A0 strcpy(at_link_A, "AT+LINK=98D3,A1,F5B548\r\n");
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00A1 strcpy(at_link_B, "AT+LINK=98D3,21,F73B81\r\n");
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00A2 
; 0000 00A3 strcpy(dicson, "AT+DISC\r\n");
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00A4 strcpy(at_state, "AT+STATE\r\n");
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00A5 
; 0000 00A6 PORTB.5=1;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00A7 
; 0000 00A8 while (1)
;PCODE: $00000122 VOL: 0
; 0000 00A9       {
; 0000 00AA 
; 0000 00AB       // Place your code here
; 0000 00AC 
; 0000 00AD 
; 0000 00AE 
; 0000 00AF             //UBRRL=0x19;
; 0000 00B0             PORTB.6=0;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00B1             PORTB.5=0;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00B2             delay_ms(200);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00B3 
; 0000 00B4 
; 0000 00B5             PORTB.6=1;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00B6             delay_ms(100);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00B7             PORTB.5=1;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00B8             for (k=0; k<strlen(at_bind_A); k++)
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00B9             {
; 0000 00BA                 usart_transmit(at_bind_A[k]);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00BB             }
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00BC             while(b==0);
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00BD             if (b==1)
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00BE             {
; 0000 00BF                 lcd_clear();
;PCODE: $0000014C VOL: 0
; 0000 00C0                 lcd_gotoxy(0, 0);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00C1                 lcd_puts(recData);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00C2                 lcd_gotoxy(0, 1);
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00C3                 lcd_puts("Sth Fishy");
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00C4                 b=0;
;PCODE: $0000015A VOL: 0
; 0000 00C5                 i=0;
;PCODE: $0000015B VOL: 0
; 0000 00C6             }
; 0000 00C7             delay_ms(5000);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00C8             //UBRRL=0x67;
; 0000 00C9 
; 0000 00CA             PORTB.6=0;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00CB             PORTB.5=0;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00CC 
; 0000 00CD             delay_ms(200);
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00CE             PORTB.5=1;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00CF 
; 0000 00D0 
; 0000 00D1       }
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00D2 }
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0

	.DSEG
_0x27:
	.BYTE 0xA6
